# ------------------------------------------------------------------------------- #
# MODE: Compared Simulation
# ------------------------------------------------------------------------------- #
# The purpose of the experiment is to compare the behavior of the DT with
# real-world (ground) data and evaluate the accuracy of the system.
# ------------------------------------------------------------------------------- #

# Summary of the experiment
experiment_name: "Compared Simulation"
description: "Example experiment"
goal: "GOAL"

# Folder where the results will be saved
destination_folder: "paper_dic24/invecchiamento_no_SEI_cella1"

# Ground Data (input and validation)
# ------------------------------------------------------------------------------- #
# 1. specify the .csv file from which we have to read real-world data
# 2. specify variables used as input and output (for validation)
# 3. specify the format of 'Time' column ('seconds' or 'timestamp')
# 4. specify the number of times the experiment has to be repeated by providing
#    the ground data in input. Defailt is 1.
# 5. specify for all the variables:
#   - 'var' has to be a variable among [current, voltage, power, temperature].
#   - 'label' is the column name of the variable inside the csv file.
#      Example: {'Voltage [V]', 'Current [A]', 'Power [W]'}
#      --> [NOTE: there must be always a 'Time' column within the csv]
#    - 'unit' specifies the unit of input and output preprocessing that will be
#       transformed to Digital Twin internal default units.
# # ------------------------------------------------------------------------------- #
input:
  ground_data:
    file: "paper_dic24/aging_cella1_CU2-4.csv"
    load: "current"
    time_format: "timestamp"
    vars:
      - var: "current"
        label: "Corrente[A]"
        unit: "A"
      - var: "voltage"
        label: "Tensione[V]"
        unit: "V"
      - var: "temperature"
        label: "Temperatura[degC]"
        unit: "degC"
      - var: "t_amb"
        label: "T_ambiente[degC]"
        unit: "degC"
    cycle_for: 1

# Simulation Options
# ------------------------------------------------------------------------------- #
# iterations:
#   the number of iterations of the simulated experiment (null -> full experiment).
# timestep:
#   the timestep of the simulator in seconds.
# ------------------------------------------------------------------------------- #
start_at: null
iterations: null #CU2
timestep: null
check_soh_every: 427326
clear_collections_every: 50000
# todo: interp_ground_data: null

# CU prova Modulo (celle 3-12)
# step: CU2 = 3369120, CU3 =  5233222, CU4 = 7642381
# soh:  CU2 = 0.999335, CU3 = 0.963521, CU4 = 0.928935
# sim:  CU2 = 0.99031, CU3 = 0.973622, CU4 = 0.944785

# CU4 - CU2 = 4273260

# Battery options
# ------------------------------------------------------------------------------- #
# sign_convention:
#   - active: (power sources) p<0 and current exiting => i>0 during discharge (default for Thevenin)
#   - passive: (loads) with p>0 and current entering => i<0 during discharge
# other params:
#   - 'var' has to be a variable among of the parameter.
#   - 'value' is the float value of the parameter.
#   - 'unit' specifies the unit of the parameter that will be transformed to
#      Digital Twin internal default units.
# ------------------------------------------------------------------------------- #
battery:
  sign_convention: "passive"

  params:
    nominal_capacity:
      var: "capacity"
      value: 20.991442
      unit: "F"
    v_max:
      var: "voltage"
      value: 4.2
      unit: "V"
    v_min:
      var: "voltage"
      value: 3.
      unit: "V"

  bounds:
    soc:
      low: 0.
      high: 1.

  init:
    #voltage: 3.577
    current: 0.
    #temperature: 295.5825 # 23 degC
    #soc: 0.1786
    soh: 1.
# Plot options: how to use it?
# --------------------------------------------------------------------------------
#
# Among 'vars' are enlisted the variables that the user desires to plot:
#   - 'var' has to be a string among [current, voltage, power, temperature]
# --------------------------------------------------------------------------------
#
# plots:
#   compared:
#     - 'voltage'
#     - 'temperature'
#     - 'power'
#   single:
#     - 'voltage'
